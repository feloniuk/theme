{% sw_extends '@Storefront/storefront/component/account/register.html.twig' %}

{% set originalForm %}
    <div
    class="card register-card">
    <div
      class="card-body">
      {% block component_account_register_form %}
        <form
          action="{{ path('frontend.account.register.save') }}" class="register-form"
          method="post"
          data-form-csrf-handler="true"
          data-form-validation="true">

          {% block component_account_register_redirect %}
            <input
              type="hidden"
              name="redirectTo"
              value="{{ redirectTo }}">
            <input
              type="hidden"
              name="redirectParameters"
              value="{{ redirectParameters }}">
          {% endblock %}

          {% block component_account_register_form_action %}
            <input
              type="hidden"
              name="errorRoute"
              value="frontend.account.register.page"/>
          {% endblock %}

          {% block component_account_register_personal %}
            <div class="register-personal mb-0">

              {% block component_account_cart_register_toggler %}
                {% block page_checkout_register_personal_guest_input %}
                  <input
                    type="checkbox"
                    class="d-none"
                    name="guest"
                    value="1"
                    checked>
                {% endblock %}
              {% endblock %}

              {% block component_account_register_personal_fields %}

                {% block component_account_register_personal_address_fields %}
                  {% sw_include '@Storefront/storefront/component/address/address-personal.html.twig' with {
                    'showBirthdayField': config('core.loginRegistration.showBirthdayField')
                  } %}
                {% endblock %}

                {% set formGroupMail %}
                {% block component_account_register_personal_mail %}
                  {% block component_account_register_personal_mail_label %}
                    <label
                      class="form-label"
                      for="personalMail">
                      {{ "account.personalMailLabel"|trans|sw_sanitize }}{{ "general.required"|trans|sw_sanitize }}
                    </label>
                  {% endblock %}

                  {% block component_account_register_personal_mail_input %}
                    <input
                      type="email"
                      class="form-control{% if formViolations.getViolations('/email') is not empty %} is-invalid{% endif %}"
                      autocomplete="email"
                      id="personalMail"
                      placeholder="{{ "account.personalMailPlaceholder"|trans|striptags }}" name="email"
                      value="{{ data.get('email') }}" {% if config('core.loginRegistration.requireEmailConfirmation') %} data-form-validation-equal="personalMail"
                      {% endif %} required="required">
                  {% endblock %}

                  {% block component_account_register_personal_mail_input_error %}
                    {% if formViolations.getViolations('/email') is not empty %}
                      {% sw_include '@Storefront/storefront/utilities/form-violation.html.twig' with {
                        violationPath: '/email'
                      } %}
                    {% endif %}
                  {% endblock %}
                {% endblock %}
                {% endset %}

                {% set formGroupMailConfirmation %}
                {% block component_account_register_personal_mail_confirmation %}
                  {% block component_account_register_personal_mail_confirmation_label %}
                    <label
                      class="form-label"
                      for="personalMailConfirmation">
                      {{ "account.personalMailConfirmationLabel"|trans|sw_sanitize }}{{ "general.required"|trans|sw_sanitize }}
                    </label>
                  {% endblock %}

                  {% block component_account_register_personal_mail_confirmation_input %}
                    <input
                      type="email"
                      class="form-control{% if formViolations.getViolations('/email') is not empty or formViolations.getViolations('/emailConfirmation') is not empty %} is-invalid{% endif %}"
                      autocomplete="email"
                      id="personalMailConfirmation"
                      placeholder="{{ "account.personalMailConfirmationPlaceholder"|trans|striptags }}" name="emailConfirmation"
                      value="{{ data.get('emailConfirmation') }}" data-form-validation-equal="personalMail"
                      data-form-validation-equal-message="{{ "account.personalMailConfirmationInvalidMessage"|trans|striptags }}" required="required">
                  {% endblock %}

                  {% block component_account_register_personal_mail_confirmation_input_error %}
                    {% if formViolations.getViolations('/email') is not empty %}
                      {% sw_include '@Storefront/storefront/utilities/form-violation.html.twig' with {
                          violationPath: '/email'
                      } %}
                    {% endif %}

                    {% if formViolations.getViolations('/emailConfirmation') is not empty %}
                      {% sw_include '@Storefront/storefront/utilities/form-violation.html.twig' with {
                          violationPath: '/emailConfirmation'
                      } %}
                    {% endif %}
                  {% endblock %}
                {% endblock %}
                {% endset %}

                {% set formGroupPassword %}
                {% block component_account_register_personal_password %}

                  {% block component_account_register_personal_password_label %}
                    <label
                      class="form-label"
                      for="personalPassword">
                      {{ "account.personalPasswordLabel"|trans|sw_sanitize }}{{ "general.required"|trans|sw_sanitize }}
                    </label>
                  {% endblock %}

                  {% block component_account_register_personal_password_input %}
                    <input
                      type="password"
                      class="form-control{% if formViolations.getViolations('/password') is not empty %} is-invalid{% endif %}"
                      autocomplete="new-password"
                      id="personalPassword"
                      placeholder="{{ "account.personalPasswordPlaceholder"|trans|striptags }}"
                      name="password"
                      minlength="{{ config('core.loginRegistration.passwordMinLength') }}"
                      {% if config('core.loginRegistration.requirePasswordConfirmation') %}
                        data-form-validation-equal="newPassword"
                      {% endif %}
                      {% if config('core.loginRegistration.passwordMinLength') != 0 %}
                      data-form-validation-length="{{ config('core.loginRegistration.passwordMinLength') }}"
                      data-form-validation-length-message=" {{ "account.personalpassworddescription"|trans({ '%minlength%': config('core.loginregistration.passwordminlength') })|sw_sanitize }}"
                      {% endif %} required="required">
                  {% endblock %}

                  {% block component_account_register_personal_password_description %}
                    {% if config('core.loginRegistration.passwordMinLength') != 0 %}
                      <small
                        class="form-text js-validation-message"
                        data-form-validation-length-text="true">
                        {{ "account.personalPasswordDescription"|trans({
                              '%minLength%': config('core.loginRegistration.passwordMinLength')
                          })|sw_sanitize }}
                      </small>
                    {% endif %}
                  {% endblock %}

                  {% block component_account_register_personal_password_input_error %}
                    {% if formViolations.getViolations('/password') is not empty %}
                      {% sw_include '@Storefront/storefront/utilities/form-violation.html.twig' with {
                            violationPath: '/password'
                        } %}
                    {% endif %}
                  {% endblock %}
                {% endblock %}
                {% endset %}

                {% set formGroupPasswordConfirmation %}
                {% block component_account_register_personal_password_confirmation %}

                  {% block component_account_register_personal_password_confirmation_label %}
                    <label
                      class="form-label"
                      for="personalPasswordConfirmation">
                      {{ "account.personalPasswordConfirmationLabel"|trans|sw_sanitize }}{{ "general.required"|trans|sw_sanitize }}
                    </label>
                  {% endblock %}

                  {% block component_account_register_personal_password_confirmation_input %}
                    <input
                      type="password"
                      class="form-control{% if formViolations.getViolations('/password') is not empty or formViolations.getViolations('/passwordConfirmation') is not empty %} is-invalid{% endif %}"
                      autocomplete="new-password"
                      id="personalPasswordConfirmation"
                      placeholder="{{ "account.personalPasswordConfirmationPlaceholder"|trans|striptags }}" name="passwordConfirmation"
                      minlength="{{ config('core.loginRegistration.passwordMinLength') }}" data-form-validation-equal="newPassword"
                      data-form-validation-equal-message="{{ "account.personalPasswordConfirmationInvalidMessage"|trans|striptags }}" required="required">
                  {% endblock %}

                  {% block component_account_register_personal_password_confirmation_input_error %}
                    {% if formViolations.getViolations('/password') is not empty %}
                      {% sw_include '@Storefront/storefront/utilities/form-violation.html.twig' with {
                            violationPath: '/password'
                        } %}
                    {% endif %}

                    {% if formViolations.getViolations('/passwordConfirmation') is not empty %}
                      {% sw_include '@Storefront/storefront/utilities/form-violation.html.twig' with {
                          violationPath: '/passwordConfirmation'
                      } %}
                    {% endif %}
                  {% endblock %}

                {% endblock %}
                {% endset %}

                {% block component_account_register_personal_account_fields %}
                  <div
                    class="form-row">
                    <div
                      class="form-group col-12">
                      {{ formGroupMail }}
                    </div>
                  </div>

                  <div
                    class="form-row js-form-field-toggle-guest-mode">
                    <div class="form-group col-12">
                      {% if config('core.loginRegistration.requireEmailConfirmation') %}
                        {{ formGroupMailConfirmation }}
                      {% elseif not config('core.loginRegistration.requirePasswordConfirmation') %}
                        {{ formGroupPassword }}
                      {% endif %}
                    </div>

                    {% if config('core.loginRegistration.requireEmailConfirmation') or config('core.loginRegistration.requirePasswordConfirmation') %}
                      <div class="form-group col-12">
                        {{ formGroupPassword }}
                      </div>
                    {% endif %}

                    {% if config('core.loginRegistration.requirePasswordConfirmation') %}
                      <div
                        class="form-group col-12">
                        {{ formGroupPasswordConfirmation }}
                      </div>
                    {% endif %}
                  </div>

                {% endblock %}
              {% endblock %}
            </div>
          {% endblock %}


          {% block component_account_register_captcha %}
            <div class="mb-3">
              {% sw_include '@Storefront/storefront/component/captcha/base.html.twig' with { 'captchas': config('core.basicInformation.activeCaptchas') } %}
            </div>
          {% endblock %}

          {% block component_account_register_privacy %}
            {% sw_include '@Storefront/storefront/component/privacy-notice.html.twig' %}
          {% endblock %}

          {% block component_account_register_submit %}
            <button
              type="submit"
              class="btn btn-primary px-5">
              {{ "account.registerSubmit"|trans|sw_sanitize }}
            </button>
          {% endblock %}
        </form>
      {% endblock %}
    </div>
  </div>
{% endset %}

{% block component_account_register %}
  {% set pluginConfig = page.header.extensions['moorlSignIn'].get('config') %}
    {% if pluginConfig['MoorlSignIn.config.disableShopwareRegistration'] == false %}
        {{ originalForm }}
    {% endif %}
    {% if app.getRequest().query.get('customer') != false %}
        <script>
            (function () {
                let customer = {{ app.getRequest().query.get('customer')|json_encode()|raw }};
                for (let prop in customer) {
                    //$('[name="' + prop + '"]').val(customer[prop]).attr('disabled', true);
                    document.getElementsByName(prop)[0].value = customer[prop];
                    document.getElementsByName(prop)[0].setAttribute('readonly', true);
                }
            })();
        </script>
    {% endif %}
{% endblock %}
